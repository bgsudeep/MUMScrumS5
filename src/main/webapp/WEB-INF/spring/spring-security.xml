<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/security  
           http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/employee/**" access="hasRole('HR ADMIN')" />
		<intercept-url pattern="/productbacklog/" access="hasRole('Product Owner')" />
		<intercept-url pattern="/productbacklog/**" access="hasRole('Scrum Master')" />
		
		<intercept-url pattern="/login*" access="isAnonymous()" />
		<intercept-url pattern="/**" access="isAuthenticated()" />

		<form-login login-page="/login" login-processing-url="/j_spring_security_check" default-target-url="/dashboard"
			authentication-failure-url="/login?error" username-parameter="username"
			password-parameter="password" />
			
		<logout logout-success-url="/login?logout" logout-url="/logout" />
		<session-management invalid-session-url="/"></session-management>
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

	</http>

	<authentication-manager>
		<authentication-provider>
		<!-- <password-encoder hash="sha" /> -->
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from user where username=?"
				authorities-by-username-query="select u.username,r.role from user u, user_role ur, role r where u.username=? and u.id = ur.user_id and r.id = ur.role_id" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>  